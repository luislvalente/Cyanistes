[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Island Biology Course - Cyanistes practical",
    "section": "",
    "text": "1 Phylogenetic divergence dating and biogeographical reconstruction\nWelcome to the Cyanistes computer practical of the Island Biology course. Here you will find the material to learn how produce a time-calibrated phylogenetic tree based on Genbank sequences and then use it to reconstruct ancestral areas and perform molecular species delimitation. We will apply these approaches to a case study of a group of birds from the Canary Islands, the afrocanarian blue-tits Cyanistes.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Welcome</span>"
    ]
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "2  Introduction",
    "section": "",
    "text": "2.1 Afrocanarian blue tits\nWhen did the blue tits (genus Cyanistes) colonise the Canary Islands?\nThe Cyanistes caerulus/teneriffae species complex (blue tits) is a group of birds found in North Africa, Canary Islands and Eurasia (Stervander et al 2015, Molecular Ecology). Even though it has been widely studied for decades using morphological and molecular data, taxonomists still cannot agree on how many species there are! In particular, it remains unclear how many colonisation events have occurred to the Canary Islands, and how many distinct lineages occur in the Canary Islands.\nIn this practical we are going to infer how many colonisation events have occured and estimate the time of colonisation of the Canary Islands by the ancestors of the extant Cyanistes lineages. To do this, we will reconstruct and date a phylogeny of genus Cyanistes, including multiple individuals of Cyanistes from all major major lineages and regions of its geographical distribution. As an outgroup, we will use the closely related genus Parus. Then we will reconstruct ancestral areas along the phylogeny to determine number of island colonisations.\nFinally, we will use the “splits” R package in R to apply the GMYC method (generalized mixed Yule coalescent) to optimize genetic clusters in our tree – in other words, we will try to identify and delimit how many species are contained in this tree.\nIn case you can’t run a certain step of this practical, there are back-up files available for every step (on Brightspace).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "3  Installation",
    "section": "",
    "text": "3.1 Install required software:",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "installation.html#install-required-software",
    "href": "installation.html#install-required-software",
    "title": "3  Installation",
    "section": "",
    "text": "R Install latest version of R if possible\nRstudio\nFigtree\nGeneious Free trial lasts for 30 days\nBeast 2 (Includes Beast, Beauti, TreeAnnotator)\nTracer",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "installation.html#install-required-r-packages",
    "href": "installation.html#install-required-r-packages",
    "title": "3  Installation",
    "section": "3.2 Install required R packages",
    "text": "3.2 Install required R packages\nOpen and run this script in Rstudio. This should install all required R packages (may take a while!).\n\ninstall.packages('ape',dependencies = TRUE)\ninstall.packages('phytools',dependencies = TRUE)\ninstall.packages('paran')\ninstall.packages('splits', repos='http://R-Forge.R-project.org')\n\nIf you have problems with installing package dependencies, this could be because you need to install a more recent version of R.\nCheck if packages load correctly:\n\nlibrary(ape)\nlibrary(phytools)\nlibrary(splits)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "alignment.html",
    "href": "alignment.html",
    "title": "4  DNA sequence alignment",
    "section": "",
    "text": "4.1 Sequence retrieval and alignment in Geneious\nA large number of genomic loci have been sequenced for Cyanistes across multiple studies. For simplictiy, we will build a phylogeny based on a single molecular marker - the mitochondrial cytochrome-B gene. We will download the sequences from Genbank, using software Geneious.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>DNA sequence alignment</span>"
    ]
  },
  {
    "objectID": "alignment.html#sequence-retrieval-and-alignment-in-geneious",
    "href": "alignment.html#sequence-retrieval-and-alignment-in-geneious",
    "title": "4  DNA sequence alignment",
    "section": "",
    "text": "4.1.1 Download sequences from Genbank.\nUse Geneious (or your preferred software to deal with DNA sequences) to download CytB sequences. A list of the accession numbers for the sequences we want to download is available in this file.\nIn the NCBI search tool of Geneious, paste the accession numbers from the file above (all at once works).\nCreate a new folder called ‘CytB’ and drag the 70 CytB sequences to it.\n\n\n4.1.2 Batch rename sequences.\nRename the sequence files using the information contained within the Genbank files. This facilitates visualisation of the tree (and is a crucial step to ensure we are all working with the exact same tip names in the phylogeny.\nSelect all the sequences at the same time and use the Batch rename function under ‘Edit’ in Geneious. Follow this scheme (unclick the tick box “Advanced” if needed):\nOrganism_Accession\n\n\n4.1.3 Create an alignment for the CytB sequences\nSelect all sequences and use the ‘Muscle’ alignment function in Geneious (Tools: Align: Multiple Alignment: Muscle Alignment. If you get an error with Muscle, you can select Multiple Alignment: Geneious Alignment). This will create an alignment file within the folder where the sequences are located. The sequences and the alignment file are linked, which means changes you make directly in the sequences will automatically be made also to the alignment.\nYou can open the alignment to visualise if you want.\n\n\n4.1.4 Export the alignment:\nExport as Nexus (*.nex), selecting the option to replace spaces by underscores in the sequence names.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>DNA sequence alignment</span>"
    ]
  },
  {
    "objectID": "beast.html",
    "href": "beast.html",
    "title": "5  Phylogeny reconstruction and dating",
    "section": "",
    "text": "5.1 Phylogenetic reconstruction and divergence dating in Beast",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Phylogeny reconstruction and dating</span>"
    ]
  },
  {
    "objectID": "beast.html#phylogenetic-reconstruction-and-divergence-dating-in-beast",
    "href": "beast.html#phylogenetic-reconstruction-and-divergence-dating-in-beast",
    "title": "5  Phylogeny reconstruction and dating",
    "section": "",
    "text": "5.1.1 Import the nexus file into software BEAUti 2.\nBEAUti is located in the BEAST software folder.\n\n\n5.1.2 Set up the Beast 2 xml file.\nSelect the following options in BEAUti 2:\na. Site Model Tab: We’re going to use the HKY+I+G model (normally you would first find the best model using a software like jModeltest). Select Estimate substitution rate; set 4 Gamma rate categories; Estimate Shape (Leave at default 1.0); Proportion of Invariant sites: 0.1; Estimate Proportion Invariant; HKY model; Estimate Kappa.\nb. Clock Model Tab: Select Strict Clock; Clock.rate: 0.01035 (This is equivalent to 2.07% pairwise divergence following Weir & Schluter Mol Ecol. 2008. 2.07/2/100=0.01035 per lineage rate)\nc. Priors Tab: Set Birth Death Model as tree prior. Leave other prior options with the default values.\nd. MCMC tab: Set chain length: 5000000 (i.e. 5 million. If it’s too slow on your computer, you could reduce this to 1 million - the longer you run the MCMC for the most likely it is to converge); Tracelog file name: Cyanistes.log; Tree log file: “Cyanistes.trees”\n\n\n5.1.3 Save the XML file.\nIn File: Save as file “Cyanistes.xml”\n\n\n5.1.4 Run XML file in BEAST 2.\nOpen BEAST 2 and load “Cyanistes.xml” file that was created in BEAUti 2. This will run the MCMC chain – this will take several minutes.\nNote: Normally you should run multiple independent chains and combine the results from several runs using software “LogCombiner”, but for practical purposes we will run a single chain.\n\n\n5.1.5 Check for convergence of MCMC run.\nOnce the BEAST run is completed load the Beast output ‘Cyanistes.log’ file to software Tracer. Here you can check whether the diagnostics of the MCMC run are good - if ESS values are low (flagged in red), this means your run did not converge; and the under the “Tracer” tab, the plot should look like a “caterpillar”, without abrupt changes. For the purposes of the practical, you can proceed even if the run diagnostics are not great (would have to run a longer chain).\n\n\n5.1.6 Generate maximum clade credibility tree.\nLoad Beast output ‘Cyanistes.trees’ file to TreeAnnotator (included in BEAST software folder) to summarize the results of the posterior distribution of trees into a single tree (maximum clade credibility tree)\nSelect:\na. Target tree type: ‘Maximum clade credibility’;\nb. Burn-in percentage: 20%\nc. Node heights: ’Mean heights”\nd. Output file: “Cyanistes.tre” - Make sure you select the folder you want to put it in by choosing “Choose File” and select the folder you want to put it in, otherwise you might not be able to find it! Best is to write it to the same folder as the input file.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Phylogeny reconstruction and dating</span>"
    ]
  },
  {
    "objectID": "handling.html",
    "href": "handling.html",
    "title": "6  Visualise and handle trees",
    "section": "",
    "text": "6.1 Phylogeny handling and visualisation in R and Figtree",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Visualise and handle trees</span>"
    ]
  },
  {
    "objectID": "handling.html#phylogeny-handling-and-visualisation-in-r-and-figtree",
    "href": "handling.html#phylogeny-handling-and-visualisation-in-r-and-figtree",
    "title": "6  Visualise and handle trees",
    "section": "",
    "text": "6.1.1 Open your maximum credibility tree in Figtree.\nHere you can visualize the tree topology, the posterior probability of different nodes (support values) and the node ages. Explore the different visualisation options in the drop-down menus by trying out different settings.\nA useful option is to select “Node labels” (left panel) and select display “Node ages” to see the ages of the nodes.\nOr select display “posterior” to see the posterior distribution support values.\nPlay around with Figtree - this will be useful for tomorrow’s practical :)\n\n\n6.1.2 Open R to load your tree\nNow let’s explore some of the functions of R applied to phylogenies.\nWelcome to R\nFirst let’s clear your workspace, in case you have some saved objects there that may interfere with the practical\n\nrm(list=ls())\n\nLoad the necessary packages to run the practical\n\nlibrary(ape)\n\nLoad the maximum clade credibility tree you produced in the Beast analysis. Here you need to change the path to the file to match the location on your computer\n\ncyanistes&lt;-read.nexus('Cyanistes.tre')\n\nLet’s see what the cyanistes object is\n\ncyanistes\n\n\nPhylogenetic tree with 70 tips and 69 internal nodes.\n\nTip labels:\n  Cyanistes_caeruleus_KY378741.1, Cyanistes_caeruleus_caeruleus_DQ474042.1, Cyanistes_caeruleus_caeruleus_KP759222.1, Cyanistes_caeruleus_calamensis_JF828080.1, Cyanistes_caeruleus_calamensis_KC202361.1, Cyanistes_caeruleus_calamensis_KP759197.1, ...\n\nRooted; includes branch lengths.\n\n\nLet’s see what the tip labels are\n\ncyanistes$tip.label\n\nPlot the phylogeny\n\nplot(cyanistes)\n\n\n\n\n\n\n\n\nLooks a bit messy.\nPlot with smaller tip labels\n\nplot(cyanistes,cex=0.4)\n\n\n\n\n\n\n\n\nIf the above still looks odd, try re-setting the margins of the R plot window, using par(mar = c(0, 0, 0, 0))\nAnd a neater version, using the ladderize option (can you tell the difference?):\n\nplot(ladderize(cyanistes),cex=0.4,no.margin=TRUE)\n\n\n\n\n\n\n\n\nCheck if the tree is ultrametric. This is essential for downstream analyses that rely on a dated tree.\n\nis.ultrametric(cyanistes)\n\n[1] TRUE\n\n\nPlot the node labels\n\nplot(ladderize(cyanistes),cex=0.4,no.margin=TRUE)\nnodelabels(cex=0.3,frame='circle',bg='grey')\n\n\n\n\n\n\n\n\nPlot as a fan.\n\nplot(ladderize(cyanistes),type='fan',cex=0.3,no.margin=TRUE,)\n\n\n\n\n\n\n\n\nZoom-in on different parts of the tree. With the function below you can click on parts of the tree to see a zoomed-in version.\n\nsubtreeplot(ladderize(cyanistes),cex=0.4)\n\nRemove the outgroup (delete all Parus individuals), by creating a new tree object without all the tips belonging to the outgroup.\n\ncyanistes_ingroup&lt;-drop.tip(cyanistes,c(\"Parus_major_major_KP759174.1\",\n                                         \"Parus_major_DQ792786.1\", \n                                         \"Parus_major_DQ792787.1\",\n                                         \"Parus_major_EU167009.1\", \n                                         \"Parus_major_KJ456375.1\"))\n\nAnd we can now plot the new tree with only the ingroup to check if it worked:\n\npar(mfrow=c(1,1))\nplot(ladderize(cyanistes_ingroup),cex=0.4,no.margin=TRUE)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Visualise and handle trees</span>"
    ]
  },
  {
    "objectID": "ancestral.html",
    "href": "ancestral.html",
    "title": "7  Ancestral area reconstruction",
    "section": "",
    "text": "7.1 Reconstruct ancestral areas\nAncestral area reconstructions are statistical approaches to infer past ranges along the branches and nodes of a phylogeny, based on the geographical distribution data of the extant species (i.e., the tips). These methods are very popular in the field of historical biogeography and island biogeography, as they allow making inferences about movements between geographical regions. We will use R for this.\nIn the case of Cyanistes, we are interested in inferring how many times the Canary Islands have been colonised from the mainland. The Canary Islands are composed of 7 main islands, and some Cyanistes lineages are found on only a few islands.\nLoad the phytools package, which includes a function for character reconstruction.\nlibrary(phytools)\nLoad table with the distribution data for all tips in the tree available in this file. Important: the names in the table must match exactly those in your tree otherwise R will not be able to match the distribution to the corresponding tip. (If they are different, change them directly in the .csv file or in your tree file)\nisland_data&lt;-read.csv(\"data/Cyanistes_distribution.csv\",header=T)\nView the table. It has 2 columns, one with the tip names and other with their geographical distribution.\nView(island_data)\nRun the chunk of code below to format the data to run ancestral area reconstruction analysis.\nisland_d&lt;-as.data.frame(island_data$Distribution)\ntaxa&lt;-as.data.frame(island_data$Species)\nislands&lt;-as.data.frame(island_d[match(cyanistes$tip.label,taxa[,1]),])\nislands&lt;-t(islands)\nislands&lt;-as.character(islands)\nnames(islands)&lt;-cyanistes$tip.label\nPerform the ancestral area reconstruction, using the function make.simmap. This a popular function for reconstructing character states along a phylogeny (stochastic character mapping). It is not necessarily the best for ancestral area reconstruction, because there are more appropriate models. But for the purposes of the practical we will use it. Takes a while to run.\nset.seed(3)\ncyanistes_simmap&lt;-make.simmap(cyanistes,islands,model=\"ER\",nsim=1000)\n\nmake.simmap is sampling character histories conditioned on\nthe transition matrix\n\nQ =\n                 ElHierro Fuerteventura GranCanaria    LaGomera    Mainland\nElHierro      -0.32321739    0.05386957  0.05386957  0.05386957  0.05386957\nFuerteventura  0.05386957   -0.32321739  0.05386957  0.05386957  0.05386957\nGranCanaria    0.05386957    0.05386957 -0.32321739  0.05386957  0.05386957\nLaGomera       0.05386957    0.05386957  0.05386957 -0.32321739  0.05386957\nMainland       0.05386957    0.05386957  0.05386957  0.05386957 -0.32321739\nPalma          0.05386957    0.05386957  0.05386957  0.05386957  0.05386957\nTenerife       0.05386957    0.05386957  0.05386957  0.05386957  0.05386957\n                    Palma    Tenerife\nElHierro       0.05386957  0.05386957\nFuerteventura  0.05386957  0.05386957\nGranCanaria    0.05386957  0.05386957\nLaGomera       0.05386957  0.05386957\nMainland       0.05386957  0.05386957\nPalma         -0.32321739  0.05386957\nTenerife       0.05386957 -0.32321739\n(estimated using likelihood);\nand (mean) root node prior probabilities\npi =\n     ElHierro Fuerteventura   GranCanaria      LaGomera      Mainland \n    0.1428571     0.1428571     0.1428571     0.1428571     0.1428571 \n        Palma      Tenerife \n    0.1428571     0.1428571 \n\n\nDone.\n\npd&lt;-summary(cyanistes_simmap,plot=FALSE)\nsimmap is stochastic simulation model, which means that you may obtain different reconstructions if you run the model different times, and the reconstruction may differ between computers. By setting the “seed” (random value setting) above we ensure that the same reconstruction can be reproduced.\nUsing the code below, plot the tree with the ancestral areas reconstructed. The colours indicate the areas reconstructed for each branch.\npar(oma=c(0,0,0,0))\ncols&lt;-setNames(palette()[1:length(unique(islands))],sort(unique(islands)))\nplot(cyanistes_simmap[[1]],cols,fsize=0.8)\nadd.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],\n                  y=25,fsize=0.8)\nOptionally, you can also add pie charts for the reconstructed areas at tips and nodes. The pie charts on the nodes indicate the uncertainty in the biogeographical reconstruction. (the code below only works if you already plotted the tree using the code above).\nnodelabels(pie=pd$ace,piecol=cols,cex=0.3)\n\ntiplabels(pie=to.matrix(islands,sort(unique(islands))),piecol=cols,cex=0.1)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Ancestral area reconstruction</span>"
    ]
  },
  {
    "objectID": "ancestral.html#reconstruct-ancestral-areas",
    "href": "ancestral.html#reconstruct-ancestral-areas",
    "title": "7  Ancestral area reconstruction",
    "section": "",
    "text": "Based on this tree, can you infer how many colonisation events of the Canary Islands there have been?\nCombining with Figtree to check for the node ages, can you estimate when these colonisations took place?\nDo you see any evidence for back-colonisation in the cytochrome-B data? (this would be a species or clade of mainland individuals, nested within an island clade).",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Ancestral area reconstruction</span>"
    ]
  },
  {
    "objectID": "species.html",
    "href": "species.html",
    "title": "8  Species delimitation",
    "section": "",
    "text": "8.1 Species delimitation using the GMYC model\nHow many species of blue tits are there? We will use a model to delimit species based on the divergence between clades in the phylogeny. The GMYC model (Fujisawa & Barraclough 2013, Systematic Biology), which stands for “Generalized Mixed Yule Coalescent Approach”, is a likelihood method for delimiting species by fitting within- and between-species branching models to reconstructed gene trees.\nLoad the splits package (“SPecies’ LImits by Threshold Statistics”), which includes an R implementation of the GMYC model.\nlibrary(splits)\nIn case you haven’t done so above, remove the outgroup (delete all Parus individuals), by creating a new object without all the tips belonging to the outgroup.\ncyanistes_ingroup&lt;-drop.tip(cyanistes,c(\"Parus_major_major_KP759174.1\",\n                                         \"Parus_major_DQ792786.1\", \n                                         \"Parus_major_DQ792787.1\",\n                                         \"Parus_major_EU167009.1\", \n                                         \"Parus_major_KJ456375.1\"))\nNow we can fit the GMYC model to the data.\ncyanistes_gmyc &lt;- gmyc(cyanistes_ingroup)\nLet’s look at the output from running the model. How many clusters are identified? What do these clusters mean?\nsummary(cyanistes_gmyc)\nView which tips in the tree are assigned to each cluster\nspec.list(cyanistes_gmyc)\nVisualize the results of the GMYC model (Hit return to view the different plots). May require some adjusting on your screen.\nplot(cyanistes_gmyc)",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Species delimitation</span>"
    ]
  },
  {
    "objectID": "species.html#species-delimitation-using-the-gmyc-model",
    "href": "species.html#species-delimitation-using-the-gmyc-model",
    "title": "8  Species delimitation",
    "section": "",
    "text": "How many “species” does the model identify?\nDo the clusters match species based on the tip names?\nWould you recommend a taxonomic revision of this group?\nHow many endemic species of Cyanistes are there in the Canary Islands?\nHow many endemic subspecies?\nWhat other sources of evidence would be useful to define species of blue tits in the Canarian archipelago?\nWhat species would you give priority to conservation (if any)?",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Species delimitation</span>"
    ]
  }
]