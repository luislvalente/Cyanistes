{
  "hash": "2e46786196487171a0f3db6755db635c",
  "result": {
    "markdown": "---\ntitle: \"Cyanistes computer practical - Island Biology course Gronigen\"\nformat: html\neditor: visual\nauthor: Lu√≠s Valente\n---\n\n\n## **Phylogenetic divergence dating and biogeographical reconstruction**\n\n**Software required:**\n\n-   R\n\n-   R packages: \"ape\", \"splits\", \"phytools\"\n\n-   Rstudio\n\n-   Geneious\n\n-   Beast (including Beauti and TreeAnnotator)\n\n-   Tracer\n\n-   Figtree\n\n## **When did the blue tits (genus *Cyanistes*) colonise the Canary Islands?**\n\nThe *Cyanistes caerulus/teneriffae* species complex (blue tits) is a group of birds found in North Africa, Canary Islands and Eurasia (Stervander et al 2015, *Molecular Ecology*). Even though it has been widely studied for decades using morphological and molecular data, taxonomists still cannot agree on how many species there are! In particular, it remains unclear how many colonisation events have occurred to the Canary Islands, and how many distinct lineages occur in the Canary Islands.\n\n## ![](images/cyanistes_teneriffae.png){width=\"218\"}![](images/cyanistes_caerulus.png){width=\"226\"}![](images/cyanistes_cyanus.png){width=\"216\"}\n\nIn this practical we are going to infer how many colonisation events have occured and estimate the time of colonisation of the Canary Islands by the ancestors of the extant *Cyanistes* lineages. To do this, we will reconstruct and date a phylogeny of genus *Cyanistes*, including multiple individuals of *Cyanistes* from all major major lineages and regions of its geographical distribution. As an outgroup, we will use the closely related genus *Parus*. Then we will reconstruct ancestral areas along the phylogeny to determine number of island colonisations.\n\nFinally, we will use the \"splits\" R package in R to apply the GMYC method (generalized mixed Yule coalescent) to optimize genetic clusters in our tree -- in other words, we will try to identify and delimit how many species are contained in this tree.\n\n\\\n\n## 1. Sequence retrieval and alignment in Geneious\n\nA large number of genomic loci have been sequenced for *Cyanistes* across multiple studies. For simplictiy, we will build a phylogeny based on a single molecular marker - the mitochondrial cytochrome-B gene. We will download the sequences from Genbank, using software Geneious.\n\n**1.1 - Download sequences from Genbank**. Use Geneious (or your preferred software to deal with DNA sequences) to download CytB sequences. A list of the accession numbers for the sequences we want to download is [available in this file](data/Genbank_accession_numbers_cyt-B.txt).\n\nIn the NCBI search tool of Geneious, paste the accession numbers from the file above (all at once works).\n\nCreate a new folder called 'CytB' and drag the 70 CytB sequences to it.\n\n**1.2 - Batch rename sequences.** Rename the sequence files using the information contained within the Genbank files. This facilitates visualisation the tree (and is a crucial step to ensure we are all working with the **exact** same tip names in the phylogeny.\n\nSelect the sequences and use the Batch rename function under 'Edit' in Geneious. Follow this scheme:\n\n*Organism_Accession*\n\n**1.3 - Create an alignment for** CytB sequences. Select all sequences and use the 'Muscle' alignment function in Geneious (Tools: Align: Multiple Alignment: Muscle Alignment). This will create an alignment file within the folder where the sequences are located. The sequences and the alignment file are linked, which means changes you make directly in the sequences will automatically be made also to the alignment.\n\n**1.4 - Export the alignment:** Export as Nexus (\\*.nex), selecting the option to replace spaces by underscores in the sequence names.\n\n\\\n\n## 2. Phylogenetic reconstruction and divergence dating in Beast\n\n**2.1 - Import the nexus file into software BEAUti 2.**\n\n**2.2 - Set up the Beast 2 xml file.** Select the following options in BEAUti 2:\n\na\\. [Site Model Tab]{.underline}: We're going to use the HKY+I+G model (normally you would first find the best model using a software like jModeltest). Select Estimate substitution rate; 4 Gamma rate categories; Estimate Shape (Leave at default 1.0); Proportion of Invariant sites: 0.1; Estimate Proportion Invariant; HKY model; Estimate Kappa.\n\nb\\. [Clock Model Tab]{.underline}: Select Strict Clock; Clock.rate: 0.01035 (This is equivalent to 2.07% pairwise divergence following Weir & Schluter *Mol Ecol*. 2008. 2.07/2/100=0.01035 per lineage rate)\n\nc\\. [Priors Tab]{.underline}: Set Birth Death Model as tree prior. Leave other prior options with the default values.\n\nd\\. [MCMC tab:]{.underline} Set chain length: 5,000,000 (i.e. 5 million. If it's too slow on your computer, you could reduce this to 1 million - the longer you run the MCMC for the most likely it is to converge); Tracelog file name: Cyanistes.log\n\n**2.3 - Export and save the XML file.** In File: Save as file \"Cyanistes.xml\"\n\n**2.4 - Run XML file in BEAST 2.** Open BEAST 2 and load Cyanistes.xml file that was created in BEAUti 2. This will run the MCMC chain -- [this will take several minutes.]{.underline}\n\nNote: Normally you should run multiple independent chains and combine the results from several runs using software \"LogCombiner\", but for practical purposes we will run a single chain.\n\n**2.5 - Check for convergence of MCMC run.** Once the BEAST run is completed load the Beast output 'Cyanistes.log' file to software Tracer. Here you can check whether the diagnostics of the MCMC run are good - if ESS values are low (flagged in red), this means your run did not converge; and the under the \"Tracer\" tab, the plot should look like a \"caterpillar\", without abrupt changes. For the purposes of the practical, you can proceed even if the run diagnostics are not great (would have to run a longer chain).\n\n**2.6 - Generate Maximum clade credibility tree.** Load Beast output 'Cyanistes.trees' file to TreeAnnotator to summarize the results of the posterior distribution of trees into a single tree (maximum clade credibility tree) Select:\n\na\\. Target tree type: 'Maximum clade credibility';\n\nb\\. Burn-in percentage: 20%\n\nc\\. Node heights: 'Mean heights\"\n\nd\\. Output file: \"Cyanistes.tre'\n\n\\\n\n## 3. Phylogeny handling and visualisation in R and Figtree.\n\n**3.1 - Open your maximum credibility tree in Figtree.** Here you can visualize the tree topology, the posterior probability of different nodes (support values) and the node ages. Explore the different options by trying out different settings.\n\n**3.2 - Open R to load your tree** and explore some of the functions of R applied to phylogenies.\n\n**Welcome to R**\n\nFirst let's clear your workspace, in case you have some saved objects there that may interfere with the practical\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\n```\n:::\n\n\nLoad the necessary packages to run the practical\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ape)\n```\n:::\n\n\nLoad the maximum clade credibility tree you produced in the Beast analysis. Here you need to change the path to the file to match the location on your computer\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncyanistes<-read.nexus('Cyanistes.tre')\n```\n:::\n\n\nLet's see what the `cyanistes` object is\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncyanistes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nPhylogenetic tree with 70 tips and 69 internal nodes.\n\nTip labels:\n  Cyanistes_caeruleus_KY378741.1, Cyanistes_caeruleus_caeruleus_DQ474042.1, Cyanistes_caeruleus_caeruleus_KP759222.1, Cyanistes_caeruleus_calamensis_JF828080.1, Cyanistes_caeruleus_calamensis_KC202361.1, Cyanistes_caeruleus_calamensis_KP759197.1, ...\n\nRooted; includes branch lengths.\n```\n:::\n:::\n\n\nLet's see what the tip labels are\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncyanistes$tip.label\n```\n:::\n\n\nPlot the phylogeny\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(cyanistes)\n```\n\n::: {.cell-output-display}\n![](Cyanistes_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nLooks a bit messy.\n\nPlot with smaller tip labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(cyanistes,cex=0.4)\n```\n\n::: {.cell-output-display}\n![](Cyanistes_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nAnd a neater version, using the `ladderize` option:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ladderize(cyanistes),cex=0.4,no.margin=TRUE)\n```\n\n::: {.cell-output-display}\n![](Cyanistes_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nCheck if the tree is ultrametric. This is essential for downstream analyses that rely on a dated tree.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis.ultrametric(cyanistes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nPlot the node labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ladderize(cyanistes),cex=0.4,no.margin=TRUE)\nnodelabels(cex=0.3,frame='circle',bg='grey')\n```\n\n::: {.cell-output-display}\n![](Cyanistes_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nPlot as a fan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ladderize(cyanistes),type='fan',cex=0.3,no.margin=TRUE,)\n```\n\n::: {.cell-output-display}\n![](Cyanistes_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nZoom-in on different parts of the tree. With the function below you can click on parts of the tree to see a zoomed-in version.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsubtreeplot(ladderize(cyanistes),cex=0.4)\n```\n:::\n\n\nRemove the outgroup (delete all *Parus* individuals), by creating a new object without all the tips belonging to the outgroup.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncyanistes_ingroup<-drop.tip(cyanistes,c(\"Parus_major_major_KP759174.1\",\n                                         \"Parus_major_DQ792786.1\", \n                                         \"Parus_major_DQ792787.1\",\n                                         \"Parus_major_EU167009.1\", \n                                         \"Parus_major_KJ456375.1\"))\n```\n:::\n\n\nAnd we can now plot the new tree with only the ingroup to check if it worked:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,1))\nplot(ladderize(cyanistes_ingroup),cex=0.4,no.margin=TRUE)\n```\n\n::: {.cell-output-display}\n![](Cyanistes_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\\\n\n## 4. Reconstruct ancestral areas\n\nAncestral area reconstructions are statistical approaches to infer past ranges along the branches and nodes of a phylogeny, based on the geographical distribution data of the extant species (i.e., the tips). These methods are very popular in the field of historical biogeography and island biogeography, as they allow making inferences about movements between geographical regions. We will use **R** for this.\n\nIn the case of *Cyanistes*, we are interested in inferring how many times the Canary Islands have been colonised from the mainland. The Canary Islands are composed of 7 main islands, and some *Cyanistes* lineages are found on only a few islands.\n\n![](images/Canary_islands.png){width=\"471\"}\n\nLoad the phytools package, which includes a function for character reconstruction.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(phytools)\n```\n:::\n\n\nLoad table with the distribution data for all tips in the tree [available in this file](data/Cyanistes_distribution.csv). **Important: the names in the table must match exactly those in your tree otherwise R will not be able to match the distribution to the corresponding tip.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisland_data<-island_data<-read.csv(\"data/Cyanistes_distribution.csv\",header=T)\n```\n:::\n\n\nView the table. It has 2 columns, one with the tip names and other with their geographical distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(island_data)\n```\n:::\n\n\nRun the chunk of code below to format the data to run ancestral area reconstruction analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisland_d<-as.data.frame(island_data$Distribution)\ntaxa<-as.data.frame(island_data$Species)\nislands<-as.data.frame(island_d[match(cyanistes$tip.label,taxa[,1]),])\nislands<-t(islands)\nislands<-as.character(islands)\nnames(islands)<-cyanistes$tip.label\n```\n:::\n\n\nPerform the ancestral area reconstruction, using the function make.simmap. This a popular function for reconstructing character states along a phylogeny (stochastic character mapping). It is not necessarily the best for ancestral area reconstruction, because there are more appropriate models. But for the purposes of the practical we will use it. **Takes a while to run.**\n\n\n::: {.cell hash='Cyanistes_cache/html/simmap_8acbc46708e9cd09b16104459562a91d'}\n\n```{.r .cell-code}\nset.seed(3)\ncyanistes_simmap<-make.simmap(cyanistes,islands,model=\"ER\",nsim=1000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmake.simmap is sampling character histories conditioned on\nthe transition matrix\n\nQ =\n                 ElHierro Fuerteventura GranCanaria    LaGomera    Mainland\nElHierro      -0.32321739    0.05386957  0.05386957  0.05386957  0.05386957\nFuerteventura  0.05386957   -0.32321739  0.05386957  0.05386957  0.05386957\nGranCanaria    0.05386957    0.05386957 -0.32321739  0.05386957  0.05386957\nLaGomera       0.05386957    0.05386957  0.05386957 -0.32321739  0.05386957\nMainland       0.05386957    0.05386957  0.05386957  0.05386957 -0.32321739\nPalma          0.05386957    0.05386957  0.05386957  0.05386957  0.05386957\nTenerife       0.05386957    0.05386957  0.05386957  0.05386957  0.05386957\n                    Palma    Tenerife\nElHierro       0.05386957  0.05386957\nFuerteventura  0.05386957  0.05386957\nGranCanaria    0.05386957  0.05386957\nLaGomera       0.05386957  0.05386957\nMainland       0.05386957  0.05386957\nPalma         -0.32321739  0.05386957\nTenerife       0.05386957 -0.32321739\n(estimated using likelihood);\nand (mean) root node prior probabilities\npi =\n     ElHierro Fuerteventura   GranCanaria      LaGomera      Mainland \n    0.1428571     0.1428571     0.1428571     0.1428571     0.1428571 \n        Palma      Tenerife \n    0.1428571     0.1428571 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nDone.\n```\n:::\n\n```{.r .cell-code}\npd<-summary(cyanistes_simmap,plot=FALSE)\n```\n:::\n\n\nUsing the code below, **plot the tree with the ancestral areas reconstructed**. The colours indicate the ares reconstructed for each branch. The pie charts on the nodes indicate the uncertainty in the biogeographical reconstruction.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(oma=c(0,0,0,0))\ncols<-setNames(palette()[1:length(unique(islands))],sort(unique(islands)))\nplot(cyanistes_simmap[[1]],cols,fsize=0.8)\nnodelabels(pie=pd$ace,piecol=cols,cex=0.3)\ntiplabels(pie=to.matrix(islands,sort(unique(islands))),piecol=cols,cex=0.1)\nadd.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],\n                  y=25,fsize=0.8)\n```\n:::\n\n\nBased on this tree, can you infer how many colonisation events of the Canary Islands there have been? Combining with figtree to check for the node ages, can you estimate *when* these colonisations took place?\n\n\\\n\n## 5. Species delimitation using the GMYC model\n\nHow many species of blue tits are there? We will use a model to delimit species based on the divergence between clades in the phylogeny. The GMYC model (Fujisawa & Barraclough 2013, *Systematic Biology*), which stands for \"Generalized Mixed Yule Coalescent Approach\", is a likelihood method for delimiting species by fitting within- and between-species branching models to reconstructed gene trees.\n\nLoad the `splits` package (\"SPecies' LImits by Threshold Statistics\"), which includes an R implementation of the GMYC model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(splits) \n```\n:::\n\n\nIn case you haven't done so above, remove the outgroup (delete all *Parus* individuals), by creating a new object without all the tips belonging to the outgroup.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncyanistes_ingroup<-drop.tip(cyanistes,c(\"Parus_major_major_KP759174.1\",\n                                         \"Parus_major_DQ792786.1\", \n                                         \"Parus_major_DQ792787.1\",\n                                         \"Parus_major_EU167009.1\", \n                                         \"Parus_major_KJ456375.1\"))\n```\n:::\n\n\nNow we can fit the GMYC model to the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncyanistes_gmyc <- gmyc(cyanistes_ingroup)\n```\n:::\n\n\nPlot the statistics. How many clusters are identified? What do these clusters mean?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(cyanistes_gmyc)\n```\n:::\n\n\nView which tips in the tree are assigned to each cluster\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspec.list(cyanistes_gmyc)\n```\n:::\n\n\nVisualize the results of the GMYC model (Hit return to view the different plots). **May require some adjusting on your screen.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(cyanistes_gmyc)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}